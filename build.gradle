plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'com.amg'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '18'
targetCompatibility = '18'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.amg.os'
    mainClass = 'com.amg.os.util.storage.StorageProcess'
}

javafx {
    version = '18'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.0')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}
// at compile time, put resources in same directories as classes
sourceSets {
    main.output.resourcesDir = main.java.outputDir
}

//// at compile time, include resources in module
//compileJava {
//    inputs.property("moduleName", moduleName)
//    doFirst {
//        options.compilerArgs = [
//                '--module-path', classpath.asPath,
//                '--patch-module', "$moduleName=",
//                + files(sourceSets.main.resources.srcDirs).asPath,
//                '--module-version', "$moduleVersion"
//        ]
//        classpath = files()
//    }
//}

// at run time, make Gradle use the module path
run {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--module', "$moduleName/$mainClassName"
        ]
        classpath = files()
    }
}